window.onload = function() {
    const useNodeJS = false;   // if you are not using a node server, set this value to false
    const defaultLiffId = "1655321821-78Dvpqmd";   // change the default LIFF value if you are not using a node server
 
    // DO NOT CHANGE THIS
    let myLiffId = "";
 
    // if node is used, fetch the environment variable and pass it to the LIFF method
    // otherwise, pass defaultLiffId
    if (useNodeJS) {
        fetch('/send-id')
            .then(function(reqResponse) {
                return reqResponse.json();
            })
            .then(function(jsonResponse) {
                myLiffId = jsonResponse.id;
                initializeLiffOrDie(myLiffId);
            })
            .catch(function(error) {
                document.getElementById("liffAppContent").classList.add('hidden');
                document.getElementById("nodeLiffIdErrorMessage").classList.remove('hidden');
            });
    } else {
        myLiffId = defaultLiffId;
        initializeLiffOrDie(myLiffId);
    }
};
 
/**
* Check if myLiffId is null. If null do not initiate liff.
* @param {string} myLiffId The LIFF ID of the selected element
*/
function initializeLiffOrDie(myLiffId) {
    if (!myLiffId) {
        document.getElementById("liffAppContent").classList.add('hidden');
        document.getElementById("liffIdErrorMessage").classList.remove('hidden');
    } else {
        initializeLiff(myLiffId);
    }
}
 
/**
* Initialize LIFF
* @param {string} myLiffId The LIFF ID of the selected element
*/
function initializeLiff(myLiffId) {
    liff
        .init({
            liffId: myLiffId
        })
        .then(() => {
            // start to use LIFF's api
            initializeApp();
        })
        .catch((err) => {
            document.getElementById("liffAppContent").classList.add('hidden');
            document.getElementById("liffInitErrorMessage").classList.remove('hidden');
        });
}
 
/**
 * Initialize the app by calling functions handling individual app components
 */
function initializeApp() {
    displayLiffData();
    displayIsInClientInfo();
    registerButtonHandlers();
 
    // check if the user is logged in/out, and disable inappropriate button
    if (liff.isLoggedIn()) {
        $("#login").addClass('hidden');   
        $("#greeting").addClass('hidden');
    } else {
        $("#logout").addClass('hidden');   
        $("#app").addClass('hidden');
    }
}
 
/**
* Display data generated by invoking LIFF methods
*/
function displayLiffData() {    
    document.getElementById('isInClient').textContent = liff.isInClient();
    document.getElementById('isLoggedIn').textContent = liff.isLoggedIn();
    
    if(liff.isLoggedIn()){
        liff.getProfile().then(function(profile) {        
            document.getElementById('customerName').textContent = profile.displayName;
    
            $("#profilePicture").attr("src", profile.pictureUrl);
            $("#profilePicture").attr("alt", 'Profile Picture');
            
        }).catch(function(error) {
            window.alert('Error getting profile: ' + error);
        });
    }
}
 
/**
* Toggle the login/logout buttons based on the isInClient status, and display a message accordingly
*/
// function displayIsInClientInfo() {
//     if (liff.isInClient()) {
//         $("#login").addClass('hidden'); 
//         $("#logout").addClass('hidden');   
//     } 
// }

function registerButtonHandlers() {

    $('#externalBrowser').click(function(){
        liff.openWindow({
            url: 'https://burgershot.herokuapp.com/',
            external: true
        });        
    });
    
    $('#login').click(function(){
        if (!liff.isLoggedIn()) {
            liff.login();
        }
    });

    $('#logout').click(function(){
        if (liff.isLoggedIn()) {
            liff.logout();
            window.location.reload();
          }
    });

    $('#pesan').click(function(){
        if (!liff.isInClient()) {
            $("#modalNotInClient").modal();
        } 
        else {
            if(!totalHarga){
                $("#modalFail").modal();
            }
            else{
                liff.sendMessages([{
                    'type': 'text',
                    'text': "Anda telah menggunakan fitur Send Message!"
                }])
                .then(function() {
                    $("#modalSuccess").modal();
                }).catch(function(error) {
                    window.alert('Error sending message: ' + error);
                });
            }
        }
    });
}



// function sendAlertIfNotInClient() {
//     alert('Tidak bisa memesan melalui external browser!');
// }
 
// function toggleElement(elementId) {
//     const elem = document.getElementById(elementId);
//     if (elem.offsetWidth > 0 && elem.offsetHeight > 0) {
//         elem.style.display = 'none';
//     } else {
//         elem.style.display = 'block';
//     }
// }


// batas kode liff

console.log("hello");